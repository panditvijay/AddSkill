/*Connected undirected graph with no self loop and multiple edges*/

#include<bits/stdc++.h>

using namespace std;

   

void dfs(int val,vector<bool> &vst,vector<vector<int>> &ad){
    
    vst[val]=true;
    cout<<val<<" ";
    
        //int k=0;
    for(int i=0;i<ad.size();i++){
        if(ad[val][i]==1 && !vst[i]){
           dfs(i,vst,ad);
        }
    }
    
}




int main(){
    
    int n;
    cin>>n;
    vector<bool> vst(n+1);
    
    vector<vector<int>> ad(n+1,vector<int>(n+1,0));
    int e=n-1;
    while(e--){
        int a,b;
        cin>>a>>b;
        
        ad[a][b]=1;
        ad[b][a]=1;
        
    }
    
    
    cout<<"printing adjecency matrix "<<"\n";
    for(int i=0;i<n+1;i++){
        for(int j=0;j<n+1;j++){
            cout<<ad[i][j]<<" ";
        }
        cout<<endl;
    }
    
    dfs(1,vst,ad);
    
    
    return 0;
}


input:
--------------------------------
20  // Number of Nodes(n) & (n-1) lines below edges
11 1
1 2
13 3
15 4
17 5
11 6
2 7
1 8
15 9
4 10
15 12
5 13
2 14
17 15
15 16
11 17
15 18
9 19
16 20


Output:
---------------------
1 2 7 14 8 11 6 17 5 13 3 15 4 10 9 19 12 16 20 18 
