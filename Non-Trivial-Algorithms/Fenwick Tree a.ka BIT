/* Author : A110011 - 00:19 "CodeIn Hard Way" 

Range sum Query: "logN" update & query

Algorithm:
------------------
Build BIT as follows:

1. create an array BIT of size N+1 //starting index 1
2. Every index(i) strores value from 1+(i-(i&-i) to i i.e say i=8 it store value from (1,8)



*/

/* Author : A110011 - 00:19 "CodeIn Hard Way" */

#include<bits/stdc++.h>

#define setbits(x)      __builtin_popcountll(x)
#define zrobits(x)      __builtin_ctzll(x)
#define mod             1000000007
#define inf             1e18
#define sp(x,y)         fixed<<setprecision(y)<<x
typedef long long int ll;

using namespace std;


void update(int val,int indx,vector<int> &bit,int n){
    
    for(;indx<n;indx+=indx & -indx){
        bit[indx]+=val;
    }
    
    
}

int query(int indx,vector<int> &bit){
    int sum=0;
    
    for(;indx>0;indx-=indx&-indx){
        sum+=bit[indx];
        
    }
    
    return sum;
}

int main(){

	// For fast I/O.
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL); 
    
   /* #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif */
    
  
    
    int n,q;
    
    cin>>n>>q;
    
    vector<int> res(n+1,0);
    vector<int> bit(n+1,0);
    for(int i=1;i<n+1;i++){
        cin>>res[i];
        
        update(res[i],i,bit,n+1);
    }
    
    
    
  /* for(int i=1;i<n+1;i++){
        cout<<bit[i]<<" ";
        
    }
    cout<<endl;*/
    
    while(q--){
        char ch;
        cin>>ch;
         int l,r;
        if(ch=='q'){
            cin>>l>>r;
            cout<<query(r,bit)-query(l-1,bit)<<endl;
        }else{
            cin>>l>>r;
            r=r-res[l];
            update(r,l,bit,n+1);
        }
    }



return 0; 
}

Input:
------------------
5 5  /*array size and no. of queries
1 5 2 4 3
q 1 5  
q 1 3
q 3 5
u 3 6
q 1 5

Output
----------
15
8
9
19
